services:
  server:
    build:
      context: .
    ports:
      - 9000:80
    depends_on:
      - database
    environment:
      MYSQL_DATABASE_NAME: four_souls
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/database-password
      MYSQL_DATABASE: database:3306
    secrets:
      - database-password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 5s
      timeout: 60s
      retries: 20

  database:
    image: mysql
    volumes:
      - database:/var/lib/mysql
      - ./scriptsSQL/:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/database-password
      MYSQL_DATABASE: four_souls
    secrets:
      - database-password
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3306/" ]
      interval: 5s
      timeout: 60s
      retries: 20

  phpmyadmin:
    image: phpmyadmin
    ports:
      - 8080:80
    depends_on:
      - database
    environment:
      - PMA_HOST=database

volumes:
  database:
secrets:
  database-password:
    file: ./secret.txt

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

